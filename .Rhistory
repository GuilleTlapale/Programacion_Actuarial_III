moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<-z+1
}else{
z<-z-1
}
contador<-contador+1
}
print(contador)
print(y)
z<-5
contador<-1
x<-c(z)
while((z>3&&z<10)&& contador<100){
y<-c(x:z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<-z+1
}else{
z<-z-1
}
contador<-contador+1
}
print(contador)
print(y)
z<-5
contador<-1
x<-c(z)
while((z>3&&z<10)&& contador<100){
y<-c(x:z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<-z+1
}else{
z<-z-1
}
contador<-contador+1
}
print(contador)
print(y)
z<-5
contador<-1
x<-c(z)
while((z>3&&z<10)&& contador<100){
y<-c(x:z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<-z+1
}else{
z<-z-1
}
contador<-contador+1
}
print(contador)
print(y)
z<-5
contador<-1
x<-c(z)
while((z>=3&&z<=10)&& contador<100){
y<-c(x:z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<-z+1
}else{
z<-z-1
}
contador<-contador+1
}
print(contador)
print(y)
z<-5
contador<-1
x<-c(z)
while((z>=3&&z<=10)&& contador<100){
y<-c(x:z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<-z+1
}else{
z<-z-1
}
contador<-contador+1
}
print(contador)
print(y)
z<-5
contador<-1
x<-c(z)
while((z>=3&&z<=10)&& contador<100){
y<-c(x:z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<-z+1
}else{
z<-z-1
}
contador<-contador+1
}
print(contador)
print(y)
z<-5
contador<-1
x<-c(z)
while((z>=3&&z<=10)&& contador<100){
y<-c(x:z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<-z+1
}else{
z<-z-1
}
contador<-contador+1
}
print(contador)
print(y)
z<-5
contador<-1
x<-c(z)
while((z>=3&&z<=10)&& contador<100){
y<-c(x:z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<-z+1
}else{
z<-z-1
}
contador<-contador+1
}
print(contador)
print(y)
x1<- c(0.5,0.6)
y1<-c(1.7,"a")
mi_vector<-vector("integer",5)
z<-5
contador<-1
x<-c(z)
while((z>=3&&z<=10)&& contador<100){
y<-vector(x:z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<-z+1
}else{
z<-z-1
}
contador<-contador+1
}
print(contador)
print(y)
?vector
d<-c(1:10)
z<-5
contador<-1
x<-c(z)
while((z>=3&&z<=10)&& contador<100){
y<-c(x:z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<-z+1
}else{
z<-z-1
}
contador<-contador+1
}
print(contador)
print(y)
z<-5
contador<-1
x<-c()
while((z>=3&&z<=10)&& contador<100){
x<-c(x:z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<-z+1
}else{
z<-z-1
}
contador<-contador+1
}
print(contador)
x
z<-5
contador<-1
x<-c()
while((z>=3&&z<=10)&& contador<100){
x<-c(x:z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<-z+1
}else{
z<-z-1
}
contador<-contador+1
}
print(contador)
x
z<-5
contador<-1
x<-c()
while((z>=3&&z<=10)&& contador<100){
x<-c(x,z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<-z+1
}else{
z<-z-1
}
contador<-contador+1
}
print(contador)
x
z<-5
contador<-1
x<-c(z)
while((z>=3&&z<=10)&& contador<100){
x<-c(x,z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<-z+1
}else{
z<-z-1
}
contador<-contador+1
}
print(contador)
x
z<-5
contador<-1
x<-c()
while((z>=3&&z<=10)&& contador<100){
x<-c(x,z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<-z+1
}else{
z<-z-1
}
contador<-contador+1
}
print(contador)
print(x)
vector<-c()
for(i in 1:100){
vector<-c(vector,x)
z<-5
contador<-1
x<-c()
while((z>=3&&z<=10)&& contador<100){
x<-c(x,z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<-z+1
}else{
z<-z-1
}
contador<-contador+1
}
print(contador)
x
}
vector
set.seed(1)
vector<-c()
for(i in 1:100){
z<-5
contador<-1
x<-c()
while((z>=3&&z<=10)&& contador<100){
x<-c(x,z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<-z+1
}else{
z<-z-1
}
contador<-contador+1
}
vector<-c(vector,length(vector))
}
vector
hist(vector)
set.seed(1)
len<-c()
for(i in 1:100){
z<-5
contador<-1
x<-c()
while((z>=3&&z<=10)&& contador<100){
x<-c(x,z)
moneda<-rbinom(1,1,0.5)
if (moneda==1){
z<-z+1
}else{
z<-z-1
}
contador<-contador+1
}
len<-c(len,length(x))
}
len
hist(len)
?plot
plot(x,type="l")
y<=x^2+5
y<(x^2)+5
plot(y)
y<c((x^2)+5)
plot(y)
x<c(-100:100)
y<=((x^2)+5)
plot(y)
x<-c(-100:100)
y<-c(x^2+5)
plot(y)
x<-c(-100:100)
y<-c(x^2+5)
plot(y,type="l")
x<-(-100:100)
y<-x^2+5
plot(y,type="l")
x<-(-100:100)/10
y<-x^2+5
plot(y,type="l")
x<-(-30:30)/10
y<-x^2+5
plot(y,type="l")
for(i in 1:50){
if (i<=25){
next
}
if (i>40){
break
}
print(i)
}
suma2<-function(x,y){
x+y
}
suma
suma2
print(suma2)
suma2(5,2)
print(suma2)
x<-suma2(5,2)
x
dput("suma2",file = "suma2.R")
dump("suma2",file = "suma2.R")
source("suma2.R")
d<-data.frame(foo=1:4,bar=1:4)
d
nrow(d)
ncol(d)
promedioCol<-function(x){
Cols<-ncol(x)
v<-c()
for(i in 1:Cols){
#sum(x[,i])/nrow(x[,i])
v<-c(v,mean(x[,i]))
}
v
}
promedioCol<-function(x,quitarNA=T){
Cols<-ncol(x)
v<-c()
for(i in 1:Cols){
#sum(x[,i])/nrow(x[,i])
v<-c(v,mean(x[,i],na.rm=quitarNA))
}
v
}
promedioCol(airquality)
for(i in 1:100){
for(j in 1:100){
if (TRUE){
n<-50
while(T||n<100){
print(n*i*j)
}
}
}
}
x<-as.Date("1970-01-01")
x
unclass(x)
unclass(as.Date("1970-01-02"))
x<-as.Date("1997-06-01")
unclass(x)
y<-as.Date("1995-05-14")
unclas(y)
unclass(y-x)
x<-as.Date("1997-06-01")
unclass(x)
y<-as.Date("1995-05-14")
unclass(y)
unclass(y-x)
date()
ct<-as.POSIXct.date(date(Sys.time()))
lt<-as.POSIXlt.date(date(Sys.time()))
weekdays()
weekdays(x)
month(x)
months(x)
x<-as.Date("1996-04-29")
unclass(x)
y<-as.Date("1995-05-14")
unclass(y)
unclass(y-x)
weekdays(x)
lapply()
lapply
function(X,FUN,...)
{
FUN<-match.fun(FUN)
if(!is.vector(X)||is.object(X))
X<-as.list(X)
.Internal(lapply(X,FUN))
}
x<-list(a=1:5,b=rnorm(10000))
a
b
x<-list(a=1:5,b=rnorm(10000))
$a
a
x<-list(a=1:5,b=rnorm(10000))
lapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,1),d=(rnorm(10,2))
lapply(x,mean)
x<-list(a=1:5,b=rnorm(100),c=rnorm(10,1),d=rnorm(10,2))
lapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,1),d=rnorm(10,2))
lapply(x,mean)
x<-1:4
lapply(x,,runif)
x<-1:4
lapply(x,runif)
x<-1:4
lapply(x,runif,max=15,min=5)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
lapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
sapply(x,mean)
x<-list(a=1:5,b=rnorm(10),c=rnorm(10,3),d=rnorm(10,5))
lapply(x,mean)
sapply(x,mean)
x<-matrix(rnorm(200),20,10)
apply(x,2,mean)
apply(x,1,sum)
x<- matrix(rnorm(200),20,10)
apply(x,1,quantile,probs=c(0.25,0.75))
a<-array(rnorm(2*2*10),c(2,2,10))
apply(a,c(1,2),mean)
rowMeans(a,dims = 2)
install.packages("swirl")
library(swirl)
install.packages("swirl")
library("swirl")
ls ()
rm (list = ls ())
is()
ls()
swirl ()
list(rep(1,4),rep(2,3),rep(3,2),rep(4,1))
mapply(rep,1:4,4:1)
list(rep(1,4),rep(2,3),rep(3,2),rep(4,1))
mapply(rep,1:4,4:1)
mapply(rep,1:5,4:1)
list(rep(1,4),rep(2,3),rep(3,2),rep(4,1))
mapply(rep,1:4,5:1)
noise<-function(n,mean,sd){
rnorm(n,mean,sd)
}
noise(5,1,2)
mapply(noise,1:5,1:5,2)
?apply
?tapply
x<-c(rnorm(10),runif(10),rnorm(10,1))
f<-gl(3,10)
f
tapply(x,f,mean)
Split(x,f)
x<-c(rnorm(10),runif(10),rnorm(10,1))
f<-gl(3,10)
f
Split(x,f)
split(x,f)
lapply(split(x,f),mean)
View(noise)
View(noise)
library(datasets)
airquality
x<c(airquality)
x<data.frame(airquality)
airquality
tapply(airquality$Temp,airquality$Month,mean,T)
tapply(airquality$Temp,airquality$Month,mean,simplify = T)
sapply(split(airquality$Temp,airquality$Month),mean)
split(airquality$Temp,airquality$Month)
s<-split(airquality,airquality$Month)
s
lapply(s,function(x) colMeans(x[,1:3]))
lapply(s,function(x) colMeans(x[,1:3],na.rm = T))
sapply(s,function(x) colMeans(x[,1:4],na.rm = T))
x<- rnorm(10)
f1<-gl(2,5)
f2<-gl(5,2)
f1
f2
interaction(f1,f2)
x
str(split(x,list(f1,f2)))
?options
options(error = recover)
read.csv("noexiste")
